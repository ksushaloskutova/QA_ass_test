import os

from telegram import Update
from telegram.ext import ApplicationBuilder, ContextTypes, MessageHandler, filters

from qa_engine import QAEngine

qa_engine = QAEngine()


async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_input = update.message.text.strip()

    # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –≤—ã–±–æ—Ä –ø—Ä–æ–≥—Ä–∞–º–º—ã –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –æ–±—Ä–∞—â–µ–Ω–∏–∏
    if "program" not in context.user_data and not context.user_data.get("awaiting_program"):
        context.user_data["awaiting_program"] = True
        await update.message.reply_text("–ö–∞–∫—É—é –ø—Ä–æ–≥—Ä–∞–º–º—É –≤—ã —Ä–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞–µ—Ç–µ: AI –∏–ª–∏ AI Product?")
        return

    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤—ã–±–æ—Ä –ø—Ä–æ–≥—Ä–∞–º–º—ã
    if context.user_data.get("awaiting_program"):
        choice = user_input.lower()
        if "product" in choice:
            context.user_data["program"] = "ai_product"
            context.user_data["awaiting_program"] = False
            await update.message.reply_text(
                "–û—Ç–ª–∏—á–Ω–æ! –í—ã –≤—ã–±—Ä–∞–ª–∏ –ø—Ä–æ–≥—Ä–∞–º–º—É AI Product. –¢–µ–ø–µ—Ä—å –∑–∞–¥–∞–π—Ç–µ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å."
            )
        elif "ai" in choice:
            context.user_data["program"] = "ai"
            context.user_data["awaiting_program"] = False
            await update.message.reply_text(
                "–û—Ç–ª–∏—á–Ω–æ! –í—ã –≤—ã–±—Ä–∞–ª–∏ –ø—Ä–æ–≥—Ä–∞–º–º—É AI. –¢–µ–ø–µ—Ä—å –∑–∞–¥–∞–π—Ç–µ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å."
            )
        else:
            await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ 'AI' –∏–ª–∏ 'AI Product'.")
        return

    program = context.user_data.get("program")

    try:
        if "—Å—Ä–∞–≤–Ω" in user_input.lower():
            response = qa_engine.compare(user_input)
        else:
            response = qa_engine.answer(user_input, program)

        if len(response) > 4000:
            response = response[:4000] + "...\n\nüîπ –û—Ç–≤–µ—Ç –±—ã–ª –æ–±—Ä–µ–∑–∞–Ω –∏–∑-–∑–∞ –¥–ª–∏–Ω—ã."

        await update.message.reply_text(response)

    except Exception as e:
        await update.message.reply_text("‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")

def run_telegram_bot():
    app = ApplicationBuilder().token(os.getenv("TELEGRAM_TOKEN")).build()
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))
    print("ü§ñ –ê–≥–µ–Ω—Ç-–±–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –∂–¥—ë—Ç —Å–æ–æ–±—â–µ–Ω–∏–π!")
    app.run_polling()
