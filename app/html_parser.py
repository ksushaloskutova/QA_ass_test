import requests
import pdfplumber
from io import BytesIO
import re

def fetch_pdf_text(url: str) -> str:
    print(f"üìÑ –ó–∞–≥—Ä—É–∂–∞—é PDF —Å {url}...")
    try:
        response = requests.get(url)
        response.raise_for_status()

        with pdfplumber.open(BytesIO(response.content)) as pdf:
            text = ''
            for page in pdf.pages:
                page_text = page.extract_text()
                if page_text:
                    text += page_text + '\n'

        print(f"‚úÖ PDF –∑–∞–≥—Ä—É–∂–µ–Ω. –î–ª–∏–Ω–∞ —Ç–µ–∫—Å—Ç–∞: {len(text)} —Å–∏–º–≤–æ–ª–æ–≤.")
        return text.strip()

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ PDF: {e}")
        return ''


def parse_course_data(text: str) -> list[dict]:
    """–ü–∞—Ä—Å–∏—Ç —Ç–µ–∫—Å—Ç —É—á–µ–±–Ω–æ–≥–æ –ø–ª–∞–Ω–∞ –≤ —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∞–Ω–Ω—ã—Ö.

    –û–∂–∏–¥–∞–µ—Ç—Å—è, —á—Ç–æ –∫–∞–∂–¥–∞—è —Å—Ç—Ä–æ–∫–∞ —Ç–µ–∫—Å—Ç–∞ –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–∏—Å—Ü–∏–ø–ª–∏–Ω—ã,
    —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ —Å–µ–º–µ—Å—Ç—Ä–∞ –∏ –ø—Ä–∏–∑–Ω–∞–∫ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏. –§—É–Ω–∫—Ü–∏—è –∏–∑–≤–ª–µ–∫–∞–µ—Ç —ç—Ç–∏ –¥–∞–Ω–Ω—ã–µ
    –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏—Ö –≤ –≤–∏–¥–µ —Å–ø–∏—Å–∫–∞ —Å–ª–æ–≤–∞—Ä–µ–π.

    –ü—Ä–∏–º–µ—Ä –≤–æ–∑–≤—Ä–∞—â–∞–µ–º–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã::

        [
            {
                "discipline": "–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞",
                "semester": 1,
                "is_mandatory": True,
            },
            ...
        ]

    –ü–æ—Å–∫–æ–ª—å–∫—É —Ñ–æ—Ä–º–∞—Ç –∏—Å—Ö–æ–¥–Ω—ã—Ö PDF –º–æ–∂–µ—Ç —Ä–∞–∑–ª–∏—á–∞—Ç—å—Å—è, —Ñ—É–Ω–∫—Ü–∏—è –∏—Å–ø–æ–ª—å–∑—É–µ—Ç
    –ø—Ä–æ—Å—Ç–µ–π—à–∏–µ —ç–≤—Ä–∏—Å—Ç–∏–∫–∏: –∏—â–µ—Ç –≤ —Å—Ç—Ä–æ–∫–µ –Ω–æ–º–µ—Ä —Å–µ–º–µ—Å—Ç—Ä–∞ –∏ –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ
    ¬´–æ–±—è–∑–∞—Ç–µ–ª¬ª –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏.
    """

    courses = []
    for raw_line in text.splitlines():
        line = raw_line.strip()
        if not line:
            continue

        sem_match = re.search(r"—Å–µ–º–µ—Å—Ç—Ä\s*(\d+)", line, re.IGNORECASE)
        if sem_match:
            name = line[: sem_match.start()].strip(" -‚Äì")
            is_mandatory = "–æ–±—è–∑–∞—Ç–µ–ª" in line.lower()

            try:
                semester = int(sem_match.group(1))
            except ValueError:
                continue

            courses.append(
                {
                    "discipline": name,
                    "semester": semester,
                    "is_mandatory": is_mandatory,
                }
            )

    return courses
